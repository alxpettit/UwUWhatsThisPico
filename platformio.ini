; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = raspberrypi
framework = arduino

; NOTE:
; On my machine, the Raspberry Pico board shows up sometimes as both of these:
; - /dev/serial/by-id/usb-Arduino_RaspberryPi_Pico_815460E636235BDB-if00
; - /dev/serial/by-id/usb-Arduino_Nano_RP2040_Connect_815460E6365D73DB-if00
; I believe that if you use the stock generic ARM toolchain from PlatformIO, the device serial will erroneously identify
; itself as a Connect instead of a Pico.

port = /dev/serial/by-id/usb-Arduino_RaspberryPi_Pico_815460E636235BDB-if00
upload_port = /dev/serial/by-id/usb-Arduino_RaspberryPi_Pico_815460E636235BDB-if00

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino

; Rather than use the repo'ed toolchains, we want to use the arduino-pico 'Arduino core' implementation.
; This implementation includes the Pico SDK from the Raspberry Foundation, so that you don't have to worry about downloading/compiling it.
; You also don't have to worry about header file paths and such, per usual.
; note that download link for toolchain is specific for OS. see https://github.com/earlephilhower/pico-quick-toolchain/releases.
platform_packages =
    maxgerhardt/framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git
    maxgerhardt/toolchain-pico@https://github.com/earlephilhower/pico-quick-toolchain/releases/download/1.3.3-a/x86_64-linux-gnu.arm-none-eabi-ed6d983.220212.tar.gz

